<?php
/**
 * @file
 * Functions to support theming
 */

use Drupal\Component\Utility\SafeMarkup;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\PluralTranslatableMarkup;
use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\node\NodeInterface;
use Drupal\taxonomy\Entity\Term;
use Drupal\node\Entity\Node;
use Drupal\views\Views;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function scitalk_theme_preprocess(&$variables) {

  $variables['#cache']['max-age'] = 0;
}
/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for page template.
 */
function scitalk_theme_preprocess_page(&$variables) {
  // Get the page header view mode for nodes and taxonomy terms where needed.
  // Get the route to find out what type of page this is
  $route = \Drupal::routeMatch();
  $routename = $route->getRouteName();
  // For talks and speakers (nodes)
  if (($routename == 'entity.node.canonical') || ($routename == 'entity.node.preview')) {
    // If the node object exists:
    if ($routename == 'entity.node.canonical') {
      $node = \Drupal::routeMatch()->getParameter('node');
    }
    else if ($routename == 'entity.node.preview') {
      $node = \Drupal::routeMatch()->getParameter('node_preview');
    }
  }

  // Negotiate the page type or section, to set the search mode
  $route_parts = explode('.', $routename);
  if ($route_parts[1] == 'node') {
    $node = \Drupal::routeMatch()->getParameter('node');
    $nodetype = $node->getType();
    if ($nodetype == 'collection') {
      // speakers will work like this when implemented
      $variables['search_section'] = $nodetype . 's';
    }
    else {
      $variables['search_section'] = 'talks';
    }
  }
  else if ($route_parts[0] == 'view') {
    $view_name = explode('_', $route_parts[1]);
    if (($view_name[1] == 'collections') ||
      (isset($view_name[2]) && ($view_name[2] == 'collections'))) {
      $variables['search_section'] = 'collections';
    }
    else {
      $variables['search_section'] = 'talks';
    }
  }
  else {
    $variables['search_section'] = 'talks';
  }

}


/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for page title template.
 */
function scitalk_theme_preprocess_page_title(&$variables) {
  $route = \Drupal::routeMatch();
  $routename = $route->getRouteName();

  if ($routename == 'entity.node.canonical') {
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node->getType() == 'collection') {
      $parent_collection_field = $node->get('field_parent_collection')->getValue();
      if (!empty($parent_collection_field[0]['target_id'])) {
        $parent_collection_id = $parent_collection_field[0]['target_id'];
        $parent_collection_node = Node::load($parent_collection_id);
        $variables['parent_collection_title'] = $parent_collection_node->getTitle();
        $variables['parent_collection_id'] = $parent_collection_id;
      }
    }
  }
}
/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for nodes.
 */
function scitalk_theme_preprocess_node(&$variables) {

  $node = $variables['node'];
  $nodetype = $node->getType();
  $nid = $node->id();

  // Find out if this is a Views page
  // Used to change the header level
  $route = \Drupal::routeMatch()->getRouteObject();
  $view_id = $route->getDefault('view_id');
  if (isset($view_id)) {
    $variables['is_view_page'] = TRUE;
  }

}

/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for bef radios
 * For Collection type field, get the count of items for that taxonomy term
 */
function scitalk_theme_preprocess_bef_radios(&$variables) {
  if ($variables['element']['#name'] == 'field_collection_type_target_id') {
    foreach ($variables['children'] as $key => $child) {
      // Get count of results for this term
      $view = Views::getView('scitalk_collections');
      $view->setDisplay('card_view');
      $view->setItemsPerPage(0);
      $exposed_filters = ['field_collection_type_target_id' => $child];
      $view->setExposedInput($exposed_filters);
      $view->execute();
      $variables['element'][$child]['#field_prefix'] = count($view->result);
    }
  }
}
/**
 * Implements hook_preprocess_HOOK() for blocks.
 */
function scitalk_theme_preprocess_block(&$variables) {

  $base_plugin_id = $variables['elements']['#base_plugin_id'];
  $plugin_id = $variables['elements']['#plugin_id'];

  // Put a slightly less insane class on the views exposed form block
  if ($base_plugin_id == 'views_exposed_filter_block') {
    $plugin_parts = explode(':', $plugin_id);
    $variables['attributes']['class'][] = 'block--' . str_replace('_', '-', $plugin_parts[1]);
  }

  // Add search form classes to search exposed form, for default search view & solr search view
  if (($variables['derivative_plugin_id'] == 'default_search_content-page_2') ||
    ($variables['derivative_plugin_id'] == 'scitalk_advanced_search-basic_search')) {
    $variables['attributes']['class'][] = 'search-block-form';
    $variables['title_attributes']['class'][] = 'visually-hidden';
  }

  // views_block:scitalk_taxonomy-collection_type_by_source
  // On Source home page taxonomy views, hdie the view if there is only 1 result
  if (($plugin_id == 'views_block:scitalk_taxonomy-subjects_by_source') &&
    (isset($variables['content']['#view']))) {
    $view = $variables['content']['#view'];
    if ($view->total_rows <= 1) {
      $variables['attributes']['class'][] = 'visually-hidden';
    }
  }

  if (($plugin_id == 'views_block:scitalk_taxonomy-collection_type_by_source') &&
    (isset($variables['content']['#view']))) {
    $view = $variables['content']['#view'];
    if ($view->total_rows <= 1) {
      $variables['attributes']['class'][] = 'visually-hidden';
    }
  }
}

/*
 * Implements hook_preprocess_HOOK() for fields.
 */
function scitalk_theme_preprocess_field(&$variables) {
  $field_name = $variables['field_name'];

  // Change label on Prefixed talk number field
  if ($field_name == 'scitalk_prefixed_talk_number') {
    $variables['label'] = t('Talk number');
  }

  // Pass group full name to source repo url field (to use as link label)
  if ($field_name == 'field_source_repo_url') {
    $group_full_name_field = $variables['element']['#object']->get('field_source_repo_full_name');
    $group_full_name = $group_full_name_field[0]->getValue();
    $variables['group_full_name'] = $group_full_name['value'];
  }
}

/*
 * Implements hook_preprocess_HOOK() for media entities.
 */
function scitalk_theme_preprocess_media(&$variables) {
  $variables['bundle'] = $variables['media']->bundle();
  
  //pass the video mime types to theme for adaptive videos:
  if ($variables['bundle'] == 'scitalk_adaptive_streaming') {
    // for now we have these adaptive video mime types:
    $adpative_video_mime_mapping = [
      'm3u8' => 'application/x-mpegURL',
      'mpd' => 'application/dash+xml'
    ];
  
    $variables['adpative_video_mime_mapping'] = $adpative_video_mime_mapping;
  }
}

/*
 * Implements hook_preprocess_HOOK() for group entities.
 */
function scitalk_theme_preprocess_group(&$variables) {
  // Find out if the Talks & collections by source have results.
  $group = $variables['group'];
  $group_type = $group->type->getValue();
  $group_id = $group->id->getValue();

  // For Source Repositories, get the Talks and Collections by source views
  if (($group_type[0]['target_id'] == 'source_repository') && (!empty($group_id))) {
    // Get count of talks in view
    $talks_view = Views::getView('scitalk_talks_by_source_repo');
    $talks_view->setArguments([(int) $group_id[0]['value']]);
    $talks_view->get_total_rows = TRUE;

    $talks_view->execute('talks_full');
    $talks_count = $talks_view->total_rows;
    $variables['talks_view_count'] = $talks_count;

    // Get count of collections in view
    $collections_view = Views::getView('scitalk_talks_by_source_repo');
    $collections_view->setArguments([(int) $group_id[0]['value']]);
    $collections_view->get_total_rows = TRUE;

    $collections_view->execute('collections_full');
    $collections_count = $collections_view->total_rows;
    $variables['collections_view_count'] = $collections_count;
  }

  // Send the group id and name to Javascript, used to set the default source
  // On the advanced search form.
  $variables['#attached']['drupalSettings']['scitalk_theme']['group_name'] = $group->label->getValue();

}

/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for views.
 */
function scitalk_theme_preprocess_views_view(&$variables) {
  $view = $variables['view'];
  $view_id = $view->id();
  $view_display = $view->current_display;
  // For search view, get exposed input and make it available in the template
  if (($view_id == 'scitalk_advanced_search') || ($view_id == 'scitalk_search_collections')) {
    $exposed_input = $view->getExposedInput();
    $variables['exposed_input'] = $view->getExposedInput();
  }

}

/**
 * Implements hook_views_pre_render().
 * Alters views before render
 */

function scitalk_theme_views_pre_render(\Drupal\views\ViewExecutable $view) {
  // On source talks view, rewrite more link for talks display
  if (($view->id() == 'scitalk_talks_by_source_repo') &&
    (($view->current_display == 'talks') || ($view->current_display == 'collections'))
  ) {
    $group_id = $view->args[0];
    $group = Drupal::entityTypeManager()->getStorage('group')->loadByProperties(['id' => $group_id]);
    $group_title = $group[$group_id]->get('label')->getValue();

    if ($view->current_display == 'collections') {
      $filter_name = 'collection_source';
    }
    else {
      $filter_name = 'source';
    }

    $link = '/search-' . $view->current_display . '?' . $filter_name . '=' . str_replace(' ', '+', $group_title[0]['value']);
    $view->display_handler->setOption("link_url", $link);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for fieldsets.
 */
function scitalk_theme_preprocess_fieldset(&$variables) {
  if (isset($variables['element']['#name'])) {
    $variables['attributes']['class'][] = 'fieldset--' . str_replace('_', '-', $variables['element']['#name']);
  }
}
function scitalk_theme_preprocess_details(&$variables) {
  if (isset($variables['element']['#title'])) {
    $variables['attributes']['class'][] = 'details--' . str_replace('_', '-', strtolower($variables['element']['#title']));
  }
}

/*
 Implements hook_form_alter()
 */
function scitalk_theme_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  // Alter search form to hide form label in basic form
  if (($form['#id'] == 'views-exposed-form-scitalk-advanced-search-basic-search')) {
    // Solr search.
    $form['keys']['#title_display'] = 'invisible';
    $form['keys']['#attributes']['placeholder'] = t('Search');
    $form['keys']['#size'] = 20;

    // Database search.
    $form['search_api_fulltext']['#title_display'] = 'invisible';
    $form['search_api_fulltext']['#attributes']['placeholder'] = t('Search');
    $form['search_api_fulltext']['#size'] = 20;
  }

  // For Scientific area tags (extra filters as tags)
  if ($form['#id'] == 'views-exposed-form-scitalk-latest-talks-extra-filters') {
    $form['field_scientific_area']['#title_display'] = 'invisible';
  }
  //luis: for advanced search section
  if ($form['#id'] == 'views-exposed-form-scitalk-advanced-search-form-block') {
    $form['keys']['#title_display'] = 'invisible';
    $form['search_api_fulltext']['#attributes']['placeholder'] = t('Search');
    $form['keys']['#attributes']['placeholder'] = t('Search');
    $form['keys']['#size'] = 20;
    $form['from']['#prefix'] = '<div class="date-search-wrap">';
    //  This closes the content-search-wrap as well
    $form['to']['#suffix'] = '</div>';
    if (!empty($form['talk_subject']['#options'])) {
      foreach ($form['talk_subject']['#options'] as $key => &$option) {
        if ($key == 'All') {
          $option = t('All Subjects');
          break;
        }
      }
    }

    //in Advanced Search replace the search by repository textbox field by a dropdown
    if (!empty($form['repository_id'])) {
      $sql = "SELECT entity_id, title as repo_short_name, node__field_repo_institution.field_repo_institution_value as institution_short_name
        FROM node_field_data
        JOIN node__field_repo_institution ON node_field_data.nid = node__field_repo_institution.entity_id
        ORDER BY institution_short_name";

      $repositories = \Drupal::database()->query($sql)->fetchAll();
      $options = [];
      foreach ($repositories as $repo) {
        $options[$repo->entity_id] = $repo->institution_short_name . ' - ' . $repo->repo_short_name;
      }

      $form['repository_id'] = [
        '#type' => "select",
        '#size' => 1,
        '#default_value' => t('All Repositories'),
        '#validated' => TRUE,
        '#empty_option' => t('All Repositories'),
        '#options' => $options
      ];
    }
  }

  //new default search
  if ($form['#id'] == 'views-exposed-form-scitalk-default-advanced-search2-talks-search') {
    $form['actions']['submit']['#attributes'] = array('class' => array('do-advanced-search'));

    if (!empty($form['talk_subject']['#options'])) {
      foreach ($form['talk_subject']['#options'] as $key => &$option) {
        if ($key == 'All') {
          $option = t('All Subjects');
          break;
        }
      }
    }
  }
}

/**
 * Alter page attachments
 * Send variable to DrupalSettings for advanced search page
 */
function scitalk_theme_page_attachments_alter(array &$page) {
  $route = \Drupal::routeMatch();
  $routename = $route->getRouteName();
  $search_terms = \Drupal::request()->query->get('search_api_fulltext');
  $page['#attached']['drupalSettings']['scitalk_theme']['is_search_page'] = 'false';
  $route_parts = explode('.', $routename);

  $search_view_machine_names = [
    'scitalk_advanced_search',
    'scitalk_search_collections'
  ];

  if (in_array($route_parts[1], $search_view_machine_names)) {
    $page['#attached']['drupalSettings']['scitalk_theme']['is_search_page'] = 'true';
  }
}
